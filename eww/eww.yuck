;; Variables
(deflisten workspaces
	"scripts/workspaces.sh")

(defvar show_volume false)
(defvar show_brightness false)
(defvar prev_volume 0)

(defpoll clock_ampm   :interval "1s" "LANG=ja_JP.utf8 date +%p")
(defpoll clock_hour   :interval "1s" "date +%I")
(defpoll clock_minute :interval "1s" "date +%M")
(defpoll clock_second :interval "1s" "date +%S")

(defpoll date_year	  :interval "24h" "LANG=ja_JP.utf8 date +%Y")
(defpoll date_month	  :interval "1h"  "LANG=ja_JP.utf8 date +%m")
(defpoll date_day	  :interval "1m"  "LANG=ja_JP.utf8 date +%d")
(defpoll weekday	  :interval "1m"  "LANG=ja_JP.utf8 date +%a")

(defpoll cur_volume :interval "1s" "amixer sget Master | grep 'Right:' | awk -F '[][]' '{ print $2 }' | grep -o '[0-9]*'")
(defpoll cur_bright :interval "1s" "light -G | grep -o '[0-9]*' | head -1")

(defwidget bar [screen]
	(centerbox :orientation "v"
		(box :valign "start"
			 :class "segment-top"
			 (top))
		(box :valign "center"
			 :class "segment-middle"
			 (middle))
		(box :valign "end"
			 :vexpand true
			 :class "segment-bottom"
			 (bottom))))

(defwidget top []
	(box :class "segment-top" :space-evenly "false" :orientation "v" :spacing 3 :vexpand true
		(time)))

(defwidget middle []
	(box :class "segment-middle" :space-evenly "false" :orientation "v" :spacing 3 :vexpand true
		(workspaces)))
	
(defwidget bottom []
	(box :class "segment-bottom" :space-evenly "false" :orientation "v" :spacing 3 :vexpand true
		(volume)
		(brightness)
		(date)))
		
(defwidget workspaces []
	(literal :content workspaces))

(defwidget date []
	(box :class "module" :space-evenly "false" :orientation "v" :spacing 3
		(label :text "${weekday}" 	 :class "weekday")
		(label :text "${date_year}"  :class "date")
		(label :text "${date_month}" :class "date")
		(label :text "${date_day}"   :class "date")))

(defwidget time []
	(box :class "module" :space-evenly "false" :orientation "v" :spacing 3
		(label :text "${clock_ampm}"   :class "ampm")
		(label :text "${clock_hour}"   :class "time")
		(label :text "${clock_minute}" :class "time")
		(label :text "${clock_second}" :class "time")))

(defwidget volume []
	(eventbox :onclick     {show_volume ? "amixer sset Master ${cur_volume > 0 ? 0 : prev_volume}" : "${EWW_CMD} update show_volume=true && ${EWW_CMD} update prev_volume=${cur_volume > 0 ? cur_volume : prev_volume}"}
			  :onhoverlost "${EWW_CMD} update show_volume=false"
			  :cursor      "default"
	(box :orientation "v" :class "module" :space-evenly "false" :vexpand true
		(revealer :transition "slideup"
				  :reveal show_volume
				  :duration "350ms"
			(scale :class "volumebar"
				   :value cur_volume
				   :tooltip "Volume: ${cur_volume}%"
				   :onchange "amixer sset Master {}% && ${EWW_CMD} update prev_volume=${cur_volume > 0 ? cur_volume : prev_volume}"
				   :orientation "v"
				   :flipped true
				   :max 100
				   :min 0))
		(label :class "icon"
			   :text "")
		(label :class "info"
			   :text "${cur_volume}%"))))

(defwidget brightness []
	(eventbox :onclick     "${EWW_CMD} update show_brightness=true"
			  :onhoverlost "${EWW_CMD} update show_brightness=false"
			  :cursor "default"
	(box :orientation "v" :class "module" :space-evenly "false" :vexpand true
		(revealer :transition "slideup"
				  :reveal show_brightness
				  :duration "550ms"
			(scale :class "brightbar"
				   :value cur_bright
				   :tooltip "Brightness: ${round(cur_bright, 0)}%"
				   :onchange "brightnessctl set {}%"
				   :orientation "v"
				   :flipped true
				   :max 100
				   :min 0))
		(label :class "icon"
			   :text "")
		(label :class "info"
			   :text "${cur_bright}%"))))

(defwindow main_bar
	:monitor 0
	:geometry (geometry :x "0"
						:y "0"
						:width "55px"
						:height "100%"
						:anchor "center left")
	:windowtype "dock"
	:wm-ignore  true
	:hexpand    false
	:reserve    (struts :side "left" :distance "60px")
	(bar :screen 0))
